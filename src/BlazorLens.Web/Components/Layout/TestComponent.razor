@implements IDisposable
@*
    TestComponent - Example component with glassmorphism styling
    Compliance: UI-001 (Consistent Design), OOD-001 (Single Responsibility)
    
    This is a demonstration component showing the grid layout capabilities.
    Will be replaced with actual dashboard components in Phase 2.
*@

<div class="grid-item">
    <div class="grid-item-header">
        <div class="grid-item-title">
            <svg class="component-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <rect x="3" y="3" width="7" height="7" rx="1" stroke="currentColor" stroke-width="2"/>
                <rect x="14" y="3" width="7" height="7" rx="1" stroke="currentColor" stroke-width="2"/>
                <rect x="3" y="14" width="7" height="7" rx="1" stroke="currentColor" stroke-width="2"/>
                <rect x="14" y="14" width="7" height="7" rx="1" stroke="currentColor" stroke-width="2"/>
            </svg>
            Test Component
        </div>
        <div class="grid-item-actions">
            <button class="grid-item-action" title="Refresh" @onclick="RefreshComponent">
                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M21.5 2V8M21.5 8H15.5M21.5 8L18 4.5C16.7429 3.24286 15.1767 2.32624 13.4485 1.83853C11.7202 1.35081 9.8912 1.31024 8.1424 1.72055C6.39361 2.13086 4.78541 2.97945 3.47174 4.18719C2.15807 5.39494 1.18624 6.92091 0.654867 8.62122" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    <path d="M2.5 22V16M2.5 16H8.5M2.5 16L6 19.5C7.25714 20.7571 8.82332 21.6738 10.5515 22.1615C12.2798 22.6492 14.1088 22.6898 15.8576 22.2795C17.6064 21.8691 19.2146 21.0206 20.5283 19.8128C21.8419 18.6051 22.8138 17.0791 23.3451 15.3788" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
            </button>
            <button class="grid-item-action" title="Settings">
                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="3" stroke="currentColor" stroke-width="2"/>
                    <path d="M12 1V3M12 21V23M4.22 4.22L5.64 5.64M18.36 18.36L19.78 19.78M1 12H3M21 12H23M4.22 19.78L5.64 18.36M18.36 5.64L19.78 4.22" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                </svg>
            </button>
        </div>
    </div>
    
    <div class="grid-item-content">
        <div class="component-demo">
            <div class="demo-section">
                <h4 class="demo-heading">Live Time</h4>
                <div class="demo-value time-display">
                    @currentTime.ToString("HH:mm:ss")
                </div>
                <p class="demo-description">Updates every second to demonstrate real-time capabilities</p>
            </div>

            <div class="demo-section">
                <h4 class="demo-heading">Component Status</h4>
                <div class="status-badge status-active">
                    <span class="status-indicator"></span>
                    Active
                </div>
                <p class="demo-description">This component is running and receiving updates</p>
            </div>

            <div class="demo-section">
                <h4 class="demo-heading">Refresh Count</h4>
                <div class="demo-value counter-display">
                    @refreshCount
                </div>
                <p class="demo-description">Number of manual refreshes: Click the refresh button to test</p>
            </div>

            <div class="demo-info">
                <svg class="info-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
                    <path d="M12 16V12M12 8H12.01" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                </svg>
                <p>
                    This is a demonstration component showcasing the glassmorphism design and grid layout.
                    In Phase 2, actual dashboard components will be dynamically loaded here.
                </p>
            </div>
        </div>
    </div>
</div>

@code {
    private DateTime currentTime = DateTime.Now;
    private int refreshCount = 0;
    private Timer? timer;

    /// <summary>
    /// Initialize timer for live time updates.
    /// Compliance: CON-005 (Fail-Fast), OOD-001 (Single Responsibility)
    /// </summary>
    protected override void OnInitialized()
    {
        // Update time every second
        timer = new Timer(_ =>
        {
            currentTime = DateTime.Now;
            InvokeAsync(StateHasChanged);
        }, null, TimeSpan.Zero, TimeSpan.FromSeconds(1));
    }

    /// <summary>
    /// Handles manual component refresh.
    /// Demonstrates action button functionality.
    /// </summary>
    private void RefreshComponent()
    {
        refreshCount++;
        currentTime = DateTime.Now;
        StateHasChanged();
    }

    /// <summary>
    /// Cleanup timer on component disposal.
    /// Compliance: CON-001 (Resource Management)
    /// </summary>
    public void Dispose()
    {
        timer?.Dispose();
    }
}