// <auto-generated />
using System;
using BlazorLens.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorLens.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251019165201_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorLens.Domain.Entities.Dashboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasComment("Dashboard creation timestamp (UTC)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("Dashboard description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Dashboard display name");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Dashboards_CreatedAt");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Dashboards_Name");

                    b.ToTable("Dashboards", (string)null);
                });

            modelBuilder.Entity("BlazorLens.Domain.Entities.DashboardComponent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasComment("Component creation timestamp (UTC)");

                    b.Property<Guid>("DashboardId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Foreign key to Dashboard");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("Component description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Component display name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Component status (Active, Inactive, Error, Loading)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Component type (Chart, DataGrid, Metric, Custom)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_DashboardComponents_CreatedAt");

                    b.HasIndex("DashboardId")
                        .HasDatabaseName("IX_DashboardComponents_DashboardId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_DashboardComponents_Status");

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_DashboardComponents_Type");

                    b.HasIndex("DashboardId", "Status")
                        .HasDatabaseName("IX_DashboardComponents_DashboardId_Status");

                    b.ToTable("DashboardComponents", (string)null);
                });

            modelBuilder.Entity("BlazorLens.Domain.Entities.DashboardComponent", b =>
                {
                    b.HasOne("BlazorLens.Domain.Entities.Dashboard", "Dashboard")
                        .WithMany("Components")
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DashboardComponents_Dashboard");

                    b.Navigation("Dashboard");
                });

            modelBuilder.Entity("BlazorLens.Domain.Entities.Dashboard", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
